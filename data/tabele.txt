CREATE TABLE univerza (
	id INTEGER PRIMARY KEY AUTOINCREMENT,
	naziv TEXT NOT NULL UNIQUE,
	tip TEXT CHECK (tip IN ('javna', 'zasebna')),
	rektor TEXT,
	lokacija TEXT NOT NULL,
	kontakt TEXT,
	e_naslov TEXT NOT NULL,
	spletna_stran TEXT NOT NULL,
	leto_ustanovitve INTEGER
);
 
CREATE TABLE fakulteta (
	id INTEGER PRIMARY KEY AUTOINCREMENT,
	naziv TEXT NOT NULL UNIQUE,
	dekan TEXT NOT NULL,
	lokacija TEXT NOT NULL,
	kontakt INTEGER NOT NULL,
	e_naslov TEXT NOT NULL,
	spletna_stran TEXT NOT NULL,
	leto_ustanovitve INTEGER,
	univerza INTEGER REFERENCES univerza(id)
);

CREATE TABLE program (
	id INTEGER PRIMARY KEY AUTOINCREMENT,
	naziv TEXT NOT NULL,
	tip TEXT NOT NULL CHECK (tip IN ('redni', 'izredni')),
	stopnja TEXT NOT NULL CHECK (stopnja IN ('B1-VSÅ ', 'B1-UNI', 'B1-MAG', 'B2-MAG', 'B3-DR')),
	trajanje INTEGER NOT NULL,
	fakulteta INTEGER REFERENCES fakulteta(id)
);

CREATE TABLE predmet (
	id INTEGER PRIMARY KEY AUTOINCREMENT,
	ime TEXT NOT NULL,
	st_tedenskih_ur INTEGER NOT NULL,
	ECTS INTEGER NOT NULL,
	program INTEGER REFERENCES program(id),
	ucitelj INTEGER REFERENCES ucitelj(id),
	prostor INTEGER REFERENCES prostor(id)
);

CREATE TABLE izpit (
	id INTEGER PRIMARY KEY AUTOINCREMENT,
	datum DATE NOT NULL,
	predmet INTEGER REFERENCES predmet(id)
);

CREATE TABLE prostor (
	id INTEGER PRIMARY KEY AUTOINCREMENT,
	naziv TEXT NOT NULL,
	fakulteta INTEGER REFERENCES fakulteta(id)
);

CREATE TABLE ucitelj (
	id INTEGER PRIMARY KEY AUTOINCREMENT,
	ime_in_priimek TEXT NOT NULL,
	e_naslov TEXT,
	kabinet INTEGER REFERENCES prostor(id),
	fakulteta INTEGER REFERENCES fakulteta(id) 
);